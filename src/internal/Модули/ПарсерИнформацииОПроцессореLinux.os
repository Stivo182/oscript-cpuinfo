Функция Распарсить(Cpuinfo, Lscpu) Экспорт

	ИнформацияОПроцессоре = Новый ИнформацияОПроцессоре(Ложь);
	ИменаМоделей = Новый Массив();

	РаспарситьCpuInfo(Cpuinfo, ИнформацияОПроцессоре, ИменаМоделей);
	РаспарситьLscpu(Lscpu, ИнформацияОПроцессоре, ИменаМоделей);

	НоминальнаяЧастота = ПолучитьЧастотуИзСпискаМоделей(ИменаМоделей);
	Если НоминальнаяЧастота = 0 Тогда
		НоминальнаяЧастота = ИнформацияОПроцессоре.МаксимальнаяЧастота;
	КонецЕсли;

	ИнформацияОПроцессоре.НоминальнаяЧастота = НоминальнаяЧастота;
	ИнформацияОПроцессоре.ИмяПроцессора = СтрСоединить(ИменаМоделей, ", ");
	
	Возврат ИнформацияОПроцессоре;
	
КонецФункции

Процедура РаспарситьCpuInfo(Cpuinfo, ИнформацияОПроцессоре, ИменаМоделей)

	КоличествоЯдерПоПроцессорам = Новый Соответствие();

	Процессоры = ПарсерСекцийИнформацииОПроцессоре.РаспарситьСекции(Cpuinfo, ":");
	Для Каждого Процессор Из Процессоры Цикл

		Идентификатор = Процессор["physical id"];
		КоличествоЯдер = КонвертацияЗначенийCpuInfo.СтрокаВЧисло(Процессор["cpu cores"]);
		Если ЗначениеЗаполнено(Идентификатор) И КоличествоЯдер > 0 Тогда
			КоличествоЯдерПоПроцессорам[Идентификатор] = КоличествоЯдер;
		КонецЕсли;

		ИмяМодели = Процессор["model name"];
		Если ЗначениеЗаполнено(ИмяМодели) Тогда
			Если ИменаМоделей.Найти(ИмяМодели) = Неопределено Тогда
				ИменаМоделей.Добавить(ИмяМодели);
			КонецЕсли;

			ИнформацияОПроцессоре.КоличествоЛогическихПроцессоров = ИнформацияОПроцессоре.КоличествоЛогическихПроцессоров + 1;
		КонецЕсли;

		МаксимальнаяЧастота = КонвертацияЗначенийCpuInfo.СтрокаВЧисло(Процессор["max freq"]);
		МаксимальнаяЧастота = КонвертацияЗначенийCpuInfo.МегагерцыВГерцы(МаксимальнаяЧастота);
		Если МаксимальнаяЧастота > 0 Тогда
			ИнформацияОПроцессоре.МаксимальнаяЧастота = МаксимальнаяЧастота;
		КонецЕсли;

	КонецЦикла;

	Для Каждого Строка Из КоличествоЯдерПоПроцессорам Цикл
		ИнформацияОПроцессоре.КоличествоЯдер = ИнформацияОПроцессоре.КоличествоЯдер + Строка.Значение;
	КонецЦикла;

	ИнформацияОПроцессоре.КоличествоПроцессоров = КоличествоЯдерПоПроцессорам.Количество();

КонецПроцедуры

Процедура РаспарситьLscpu(Lscpu, ИнформацияОПроцессоре, ИменаМоделей)
	
	Если Не ЗначениеЗаполнено(Lscpu) Тогда
		Возврат;
	КонецЕсли;

	КоличествоЯдерВСокете = 0;

	МассивСтрок = ПарсерСекцийИнформацииОПроцессоре.РаспарситьСекцию(Lscpu, ":");
	Для Каждого Строка Из МассивСтрок Цикл

		Имя = СокрЛП(НРег(Строка.Ключ));
		Значение = СокрЛП(Строка.Значение);

		Если Не ЗначениеЗаполнено(Значение) Тогда
			Продолжить;
		КонецЕсли;

		Если Имя = "cpu max mhz" 
			И ИнформацияОПроцессоре.МаксимальнаяЧастота = 0 Тогда
			МаксимальнаяЧастота = КонвертацияЗначенийCpuInfo.СтрокаВЧисло(Значение);
			МаксимальнаяЧастота = КонвертацияЗначенийCpuInfo.МегагерцыВГерцы(МаксимальнаяЧастота);
			ИнформацияОПроцессоре.МаксимальнаяЧастота = МаксимальнаяЧастота;
		КонецЕсли;

		Если Имя = "model name" Тогда
			Если ИменаМоделей.Найти(Значение) = Неопределено Тогда
				ИменаМоделей.Добавить(Значение);
			КонецЕсли;
		КонецЕсли;

		Если Имя = "core(s) per socket" Тогда
			КоличествоЯдер = КонвертацияЗначенийCpuInfo.СтрокаВЧисло(Значение);
			Если КоличествоЯдер > 0 Тогда
				КоличествоЯдерВСокете = КоличествоЯдер;
			КонецЕсли;
		КонецЕсли;

		Если Имя = "architecture" Тогда
			ИнформацияОПроцессоре.Архитектура = АрхитектураПоСтроке(Значение);
		КонецЕсли;

	КонецЦикла;

	Если ИнформацияОПроцессоре.КоличествоЯдер = 0 Тогда
		ИнформацияОПроцессоре.КоличествоЯдер = КоличествоЯдерВСокете;
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьЧастотуИзСпискаМоделей(Модели)

	Для Каждого Модель Из Модели Цикл

		Частота = ПолучитьЧастотуИзСтрокиМодели(Модель);

		Если Частота > 0 Тогда
			Возврат Частота;
		КонецЕсли;

	КонецЦикла;

	Возврат 0;
	
КонецФункции

Функция ПолучитьЧастотуИзСтрокиМодели(СтрокаМодели)

	Частота = 0;

	РегулярноеВыражение = Новый РегулярноеВыражение("(\d.\d+)GHz");
	РегулярноеВыражение.ИгнорироватьРегистр = Истина;

	Совпадения = РегулярноеВыражение.НайтиСовпадения(СтрокаМодели);
	Если Совпадения.Количество() > 0 И Совпадения[0].Группы.Количество() > 1 Тогда
		Частота = КонвертацияЗначенийCpuInfo.СтрокаВЧисло(Совпадения[0].Группы[1].Значение);
		Частота = КонвертацияЗначенийCpuInfo.ГигагерцыВГерцы(Частота);
	КонецЕсли;

	Возврат Частота;

КонецФункции

Функция АрхитектураПоСтроке(Знач СтрокаАрхитектуры)
	
	Если Не ЗначениеЗаполнено(СтрокаАрхитектуры) Тогда
		Возврат Неопределено;
	КонецЕсли;

	СтрокаАрхитектуры = НРег(СтрокаАрхитектуры);

	Если ЕстьСовпадение("^i\d86$|^x86$|^x86_32$|^i86pc$|^ia32$|^ia-32$|^bepc$", СтрокаАрхитектуры) Тогда
		Возврат АрхитектурыПроцессоров.X86;
	ИначеЕсли ЕстьСовпадение("^x64$|^x86_64$|^x86_64t$|^i686-64$|^amd64$|^ia64$|^ia-64$", СтрокаАрхитектуры) Тогда
		Возврат АрхитектурыПроцессоров.X64;
	ИначеЕсли ЕстьСовпадение("^armv8-a|aarch64$", СтрокаАрхитектуры) Тогда
		Возврат АрхитектурыПроцессоров.ARM64;
	ИначеЕсли ЕстьСовпадение("^armv7$|^armv7[a-z]$|^armv7-[a-z]$|^armv6[a-z]|armv8$|^armv8[a-z]$|^armv8-[a-z]$", СтрокаАрхитектуры) Тогда
		Возврат АрхитектурыПроцессоров.ARM;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция ЕстьСовпадение(Шаблон, Значение)
	Возврат Новый РегулярноеВыражение(Шаблон).Совпадает(Значение);
КонецФункции